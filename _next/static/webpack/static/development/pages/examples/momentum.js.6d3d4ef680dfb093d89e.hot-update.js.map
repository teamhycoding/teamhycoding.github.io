{"version":3,"file":"static/webpack/static\\development\\pages\\examples\\momentum.js.6d3d4ef680dfb093d89e.hot-update.js","sources":["webpack:///./pages/examples/momentum.js"],"sourcesContent":["import Head from \"next/head\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Page = () => {\n  const UNSPLASH_API_KEY =\n    \"66a4f8ef5dece777eadefe5ebaadeaa6602162c95da2f396e42ff77e1a074920\";\n  const UNSPLASH_URL = `https://api.unsplash.com/photos/random/?client_id=${UNSPLASH_API_KEY}&query=landscape&orientation=landscape`;\n  const [background, setBackground] = useState();\n  const [name, setName] = useState();\n  const [city, setCity] = useState();\n  const [country, setCountry] = useState();\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [username, setUsername] = useState(\"\");\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const loadBackground = () => {\n    const savedImage = localStorage.getItem(\"bg\");\n\n    if (savedImage === null) {\n      getBackground();\n    } else {\n      const parsedImage = JSON.parse(savedImage);\n      const today = new Date();\n\n      if (today > parsedImage.expiresOn) {\n        getBackground();\n      } else {\n        setBackground(parsedImage.url);\n        setName(parsedImage.name);\n        setCity(parsedImage.city);\n        setCountry(parsedImage.country);\n      }\n    }\n  };\n  const saveBackground = (imageUrl, city, country, name) => {\n    const savedImage = localStorage.getItem(\"bg\");\n\n    if (savedImage !== null) {\n      localStorage.removeItem(\"bg\");\n    }\n\n    const expDate = new Date();\n    expDate.setDate(expDate.getDate() + 1);\n\n    const imgObject = {\n      url: imageUrl,\n      expiresOn: expDate,\n      city,\n      country,\n      name\n    };\n\n    localStorage.setItem(\"bg\", JSON.stringify(imgObject));\n    loadBackground();\n    return;\n  };\n  const getBackground = () => {\n    fetch(UNSPLASH_URL)\n      .then(response => response.json())\n      .then(json => {\n        const image = json;\n\n        if (image.urls && image.urls.full && image.location) {\n          const fullUrl = image.urls.full;\n          const location = image.location;\n          const city = location.city;\n          const country = location.country;\n          const name = location.name;\n\n          saveBackground(fullUrl, city, country, name);\n        } else {\n          getBackground();\n        }\n      });\n\n    return;\n  };\n\n  useEffect(() => {\n    loadBackground();\n    setInterval(() => {\n      const now = new Date();\n\n      setHours(now.getHours());\n      setMinutes(now.getMinutes());\n    }, 1000);\n\n    setUsername(localStorage.getItem(\"username\"));\n\n    if (localStorage.getItem(\"todos\")) {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div>\n      <Head>\n        <title>Momentum Examples</title>\n        <link href=\"/static/css/momentum/style.css\" rel=\"stylesheet\" />\n      </Head>\n      <section className=\"center\">\n        <div className=\"js-clock clock\">\n          <h3 className=\"clock__text\">\n            {hours}:{minutes}\n          </h3>\n        </div>\n        <div className=\"js-name name\">\n          {username === null ? (\n            <form\n              onSubmit={event => {\n                event.preventDefault();\n                setUsername(usernameInput);\n                localStorage.setItem(\"username\", usernameInput);\n              }}\n            >\n              <input\n                type=\"text\"\n                placeholder=\"Type your name here\"\n                className=\"name__input\"\n                onChange={event => {\n                  setUsernameInput(event.target.value);\n                }}\n              />\n            </form>\n          ) : (\n            <span className=\"name__text\">Hello, {username}</span>\n          )}\n        </div>\n        <div>\n          <form\n            className=\"js-to-do to-do\"\n            onSubmit={event => {\n              event.preventDefault();\n              setTodos([\n                ...todos,\n                { id: new Date().getTime(), value: todoInput }\n              ]);\n            }}\n          >\n            <input\n              className=\"js-add-to-do to-do__add-to-do\"\n              placeholder=\"Write a To Do here\"\n              type=\"text\"\n              onChange={event => {\n                setTodoInput(event.target.value);\n              }}\n            />\n          </form>\n          <ul className=\"js-list list\">\n            {todos.map(todo => (\n              <li key={todo.id}>\n                <span className=\"toDo__button\">‚ùå</span>\n                <label>{todo.value}</label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n      <div className=\"js-location location\">\n        <span className=\"location__text\">\n          {name}, {city}, {country}\n        </span>\n      </div>\n      <div className=\"js-weather weather\">\n        <span className=\"weather__text\" />\n      </div>\n      <style global jsx>{`\n        body {\n          background-image: linear-gradient(\n              rgba(0, 0, 0, 0.4),\n              rgba(0, 0, 0, 0.4)\n            ),\n            url(${background});\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArEA;AAAA;AAAA;AAAA;AAkFA;AACA;AACA;;;;A","sourceRoot":""}